{"version":3,"sources":["reducers/beginingTime.js","reducers/index.js","actions/types.js","history.js","Components/Timer.js","actions/index.js","Components/Nav.js","Components/Settings.js","Components/App.js","index.js"],"names":["beginingTime","pomodoro","minutes","seconds","shortbreak","longbreak","count","combineReducers","beginningTime","state","action","type","payload","createBrowserHistory","getColor","isOn","Timer","time","props","timer","setInterval","tick","getBeginTime","alert","resetButton","changeCount","setState","clearInterval","startButton","getHeading","changeTimer","style","width","margin","padding","textAlign","fontSize","this","backgroundColor","borderColor","height","onClick","background","href","React","Component","connect","Header","Layout","Nav","theme","mode","Item","key","to","SettingFilled","GithubFilled","changePomodoro","changeShortBreak","changeLongBreak","onFinishFailed","name","initialValues","remember","onFinish","short","long","valid1","test","valid2","valid3","console","log","history","goBack","span","offset","label","rules","required","message","htmlType","Content","App","id","path","exact","component","Settings","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.8b09a108.chunk.js","sourcesContent":["import {\r\n    CHANGE_POMODORO,\r\n    CHANGE_SHORT_BREAK,\r\n    CHANGE_LONG_BREAK,\r\n    CHANGE_COUNT\r\n} from '../actions/types'\r\n\r\nconst beginingTime = {\r\n    pomodoro: {\r\n        minutes: 25,\r\n        seconds: \"00\"\r\n    },\r\n    \r\n    shortbreak: {\r\n        minutes: 5,\r\n        seconds: \"00\"\r\n    },\r\n    \r\n    longbreak: {\r\n        minutes: 15,\r\n        seconds: \"00\"\r\n    },\r\n    count: 0\r\n}\r\n\r\nexport default (state = beginingTime, action) => {\r\n    switch(action.type)\r\n    {\r\n        case CHANGE_POMODORO:\r\n            return {...state, pomodoro: action.payload}\r\n            \r\n        case CHANGE_SHORT_BREAK:\r\n            return {...state, shortbreak: action.payload}\r\n                \r\n        case CHANGE_LONG_BREAK:\r\n            return {...state, longbreak: action.payload}\r\n\r\n        case CHANGE_COUNT:\r\n            return {...state, count: action.payload + 1}\r\n        \r\n        default: \r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport beginningTime from './beginingTime'\r\n\r\nexport default combineReducers({\r\n    beginningTime: beginningTime\r\n})","export const CHANGE_POMODORO = \"CHANGE_POMODORO\";\r\nexport const CHANGE_SHORT_BREAK = \"CHANGE_SHORT_BREAK\";\r\nexport const CHANGE_LONG_BREAK = \"CHANGE_LONG_BREAK\";\r\nexport const CHANGE_COUNT = \"CHANGE_COUNT\";","import { createBrowserHistory } from 'history'; \r\nexport default createBrowserHistory();\r\n","// Imports\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { changeCount } from '../actions'\r\nimport { Button } from 'antd';\r\nimport { Card } from 'antd';\r\nimport { Divider } from 'antd';\r\n\r\n// Helper Functions\r\nconst getColor = (isOn) => {\r\n    return isOn ? \"#db2828\" : \"#21ba45\";\r\n}\r\n\r\nconst getText = (isOn) => {\r\n    return isOn ? \"Stop\" : \"Start\";\r\n}\r\n\r\n\r\n// Timer Component\r\nclass Timer extends React.Component {\r\n    state = {\r\n        isOn: false,\r\n        time: {\r\n            minutes: this.props.beginningTime.pomodoro.minutes,\r\n            seconds: this.props.beginningTime.pomodoro.seconds\r\n        },\r\n        timer: setInterval(this.tick, 1000),\r\n        type: 'Pomodoro'\r\n    }\r\n\r\n    // *** Helper Functions *** \r\n    getBeginTime = (type) => {\r\n        if (type === 'Pomodoro') {\r\n            return {\r\n                minutes: this.props.beginningTime.pomodoro.minutes,\r\n                seconds: this.props.beginningTime.pomodoro.seconds\r\n            }\r\n        }\r\n        else if (type === 'Short Break') {\r\n            return {\r\n                minutes: this.props.beginningTime.shortbreak.minutes,\r\n                seconds: this.props.beginningTime.shortbreak.seconds\r\n            }\r\n\r\n        }\r\n        else {\r\n            return {\r\n                minutes: this.props.beginningTime.longbreak.minutes,\r\n                seconds: this.props.beginningTime.longbreak.seconds\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    tick = () => {\r\n        const time = this.state.time;\r\n        const minutes = time.minutes;\r\n        const seconds = time.seconds;\r\n        if (this.state.isOn) {\r\n            if (minutes == 0 && seconds == 0) {\r\n                alert(`${this.state.type} Done!`);\r\n                this.resetButton(this.state.type);\r\n                if (this.state.type === \"Pomodoro\") {\r\n                    this.props.changeCount(this.props.beginningTime.count);\r\n                }\r\n            }\r\n            else if (seconds == 0) {\r\n                this.setState({\r\n                    time: {\r\n                        minutes: minutes - 1,\r\n                        seconds: 59\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    time: {\r\n                        minutes: minutes,\r\n                        seconds: seconds - 1\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            clearInterval(this);\r\n        }\r\n    }\r\n\r\n    startButton = () => {\r\n        if (this.state.isOn) {\r\n            this.setState({ isOn: false });\r\n            clearInterval(this.state.timer);\r\n        }\r\n        else {\r\n            this.setState({\r\n                isOn: true,\r\n            });\r\n            this.setState({ timer: setInterval(this.tick, 1000) });\r\n        }\r\n    }\r\n\r\n    resetButton = () => {\r\n        this.setState({\r\n            time: this.getBeginTime(this.state.type),\r\n            isOn: false\r\n        })\r\n        clearInterval(this.state.timer);\r\n    }\r\n\r\n    getHeading = () => {\r\n        if (this.state.isOn) {\r\n\r\n            return <div>{this.state.type} in progress...</div>;\r\n        }\r\n        else if (this.state.time.minutes === this.props.beginningTime.pomodoro.minutes) return <div>Start {this.state.type}</div>;\r\n        else if (this.state.time.minutes === this.props.beginningTime.shortbreak.minutes) return <div>Start {this.state.type}</div>;\r\n        else if (this.state.time.minutes === this.props.beginningTime.longbreak.minutes) return <div>Start {this.state.type}</div>;\r\n        else return <div>Continue {this.state.type}</div>;\r\n    }\r\n\r\n    changeTimer = (timer) => {\r\n        if (timer === 1) {\r\n            this.resetButton();\r\n            this.setState({\r\n                time: this.getBeginTime(\"Pomodoro\"),\r\n                type: \"Pomodoro\"\r\n            })\r\n        }\r\n        else if (timer === 2) {\r\n            this.resetButton();\r\n            this.setState({\r\n                time: this.getBeginTime(\"Short Break\"),\r\n                type: \"Short Break\"\r\n            })\r\n        }\r\n        else {\r\n            this.resetButton();\r\n            this.setState({\r\n                time: this.getBeginTime(\"Long Break\"),\r\n                type: \"Long Break\"\r\n            })\r\n        }\r\n    }\r\n\r\n    // **********************************************************************************************************************************************************************************************************************************\r\n    // Component Functions\r\n\r\n    render() {\r\n        return (\r\n            <Card style={{ width: \"90%\", margin: \"0 auto\", padding:\"20px 0\"}}>\r\n                <div style = {{textAlign: \"center\"}}>\r\n                    <h1 style = {{ fontSize: \"45px\"}}>\r\n                        {this.getHeading()}\r\n                    </h1>\r\n                    <Divider />\r\n                    <h1 style = {{fontSize: \"90px\"}}>\r\n                        {this.state.time.minutes + \":\" + this.state.time.seconds}\r\n                    </h1>\r\n                    <div>\r\n                        <Button type=\"primary\" style={{ backgroundColor: `${getColor(this.state.isOn)}`, borderColor: `${getColor(this.state.isOn)}`, margin: \"0 10px\", width: \"200px\", height: \"40px\",fontSize: \"18px\"}} onClick={this.startButton}>{getText(this.state.isOn)}</Button>\r\n                        <Button type=\"primary\" style={{ background: \"#595959\", borderColor: \"#595959\", margin: \"0 10px\", width: \"200px\", height: \"40px\",fontSize: \"18px\"}} onClick={this.resetButton}>Reset</Button>\r\n                    </div>\r\n                    <Divider />\r\n                    <h1 style = {{ fontSize: \"40px\"}}>\r\n                        Options\r\n                    </h1>\r\n                    <div>\r\n                        <Button type=\"primary\" style={{ background: \"#db2828\", borderColor: \"#db2828\", margin: \"0 10px\", width: \"200px\", height: \"40px\",fontSize: \"18px\"}} onClick={() => this.changeTimer(1)}>Pomodoro</Button>\r\n                        <Button type=\"primary\" style={{ background: \"#21ba45\", borderColor: \"#21ba45\", margin: \"0 10px\", width: \"200px\", height: \"40px\",fontSize: \"18px\"}} onClick={() => this.changeTimer(2)}>Short Break</Button>\r\n                        <Button type=\"primary\" style={{ background: \"#2185d0\", borderColor: \"#2185d0\", margin: \"0 10px\", width: \"200px\", height: \"40px\",fontSize: \"18px\"}} onClick={() => this.changeTimer(3)}>Long Break</Button>\r\n                    </div>\r\n                    <Divider />\r\n                    <h1 style = {{ fontSize: \"40px\"}}>\r\n                        Count\r\n                    </h1>\r\n                    <h1 style = {{ fontSize: \"25px\"}}>\r\n                        Number of Pomodoro Sessions done today: {this.props.beginningTime.count}\r\n                    </h1>\r\n                    <Divider />\r\n                    <h1 style = {{ fontSize: \"40px\"}}>\r\n                        Stats\r\n                    </h1>\r\n                </div>\r\n                <Divider />\r\n                <div>\r\n                    <h1 style = {{fontSize: \"40px\", textAlign: \"center\"}}>\r\n                        Jikan is a Pomodoro Timer made in React.js and Redux\r\n                    </h1>\r\n                    <p style = {{fontSize: \"20px\"}}>\r\n                        The Pomodoro Technique is a time management method developed by Francesco Cirillo in the late 1980s. The technique uses a timer to break down work into intervals, traditionally 25 minutes in length, separated by short breaks. Each interval is known as a pomodoro, from the Italian word for 'tomato', after the tomato-shaped kitchen timer that Cirillo used as a university student - <a href = \"https://en.wikipedia.org/wiki/Pomodoro_Technique\">Wikipedia</a>\r\n                    </p>\r\n                    <p style = {{fontSize: \"20px\"}}>\r\n                        I use the pomodoro technique everyday of my life to stay more productive and I think it has worked wonders for me. So when I learnt React JS, I decided to make a small Pomodoro Timer web app.\r\n                    </p>\r\n                    <Divider />\r\n                    <h1 style = {{fontSize: \"40px\", textAlign: \"center\"}}>\r\n                        How to use the Pomodoro Technique in Jikan?\r\n                    </h1>\r\n                    <ul style = {{fontSize: \"20px\"}}>\r\n                        <li>Decide on the task to be done.</li>\r\n                        <li>Set the pomodoro timer to Pomodoro mode (25 Minutes)</li>\r\n                        <li>Work on the task.</li>\r\n                        <li>Once the timer is up take a short break (5 Minutes). Once done, start a new task.</li>\r\n                        <li>After four pomodoros, take a long break (15 Minutes).</li>\r\n                        <li>Repeat</li>\r\n                    </ul>\r\n                </div>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        beginningTime: state.beginningTime\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { changeCount }\r\n)(Timer)","import {\r\n    CHANGE_POMODORO,\r\n    CHANGE_SHORT_BREAK,\r\n    CHANGE_LONG_BREAK,\r\n    CHANGE_COUNT\r\n} from './types'\r\n\r\n\r\nexport const changePomodoro = (time) => {\r\n    return {\r\n        type: CHANGE_POMODORO,\r\n        payload: {\r\n            minutes: time,\r\n            seconds: \"00\" \r\n        } \r\n    }\r\n}\r\n\r\nexport const changeShortBreak = (time) => {\r\n    return {\r\n        type: CHANGE_SHORT_BREAK,\r\n        payload: {\r\n            minutes: time,\r\n            seconds: \"00\" \r\n        }    \r\n    }\r\n}\r\n\r\nexport const changeLongBreak = (time) => {\r\n    return {\r\n        type: CHANGE_LONG_BREAK,\r\n        payload: {\r\n            minutes: time,\r\n            seconds: \"00\" \r\n        }    \r\n    }\r\n}\r\n\r\nexport const changeCount = (count) => {\r\n    return {\r\n        type: CHANGE_COUNT,\r\n        payload: count\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Layout, Menu } from 'antd';\r\nimport {GithubFilled, SettingFilled} from '@ant-design/icons'\r\nconst { Header } = Layout;\r\n\r\nclass Nav extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header>\r\n                <Menu theme=\"dark\" mode=\"horizontal\">\r\n                    <Menu.Item key=\"1\">\r\n                        <Link to = \"/\">Jikan</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\">\r\n                        <Link to = \"/Settings\">\r\n                            <SettingFilled style = {{margin: \"0 auto\", fontSize: \"17.5px\"}}/>\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"3\">\r\n                        <a href = \"https://github.com/PrithviAnilK/Jikan\">\r\n                            <GithubFilled style = {{margin: \"0 auto\", fontSize: \"17.5px\"}}/>\r\n                        </a>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav;","import React from 'react'\r\nimport { Form, Input, Button } from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport { changePomodoro, changeShortBreak, changeLongBreak } from '../actions'\r\nimport history from '../history'\r\nimport { Card } from 'antd';\r\n\r\nconst Demo = (props) => {\r\n  const onFinish = ({pomodoro, short, long}) => {\r\n      var valid1 = /^\\d+$/.test(pomodoro)\r\n      var valid2 = /^\\d+$/.test(short)\r\n      var valid3 = /^\\d+$/.test(long)\r\n      if(valid1 && valid2 && valid3)\r\n      {\r\n          props.changePomodoro(pomodoro);\r\n          props.changeShortBreak(short);\r\n          props.changeLongBreak(long);\r\n          console.log('Success:', [pomodoro, short, long]);\r\n          history.goBack();\r\n    }\r\n    else \r\n    {\r\n        onFinishFailed();\r\n    }\r\n  };\r\n\r\n  const onFinishFailed = () => {\r\n    alert(\"Enter a valid time (number)!\");\r\n  };\r\n\r\n  return (\r\n    <Card style={{ width: \"90%\", margin: \"0 auto\", padding:\"20px 0\", height: \"100vh\"}}>\r\n        <div style = {{textAlign: \"center\", backgroundColor: \"white\"}}>\r\n        <h1 style = {{fontSize: \"40px\"}}>\r\n            Settings\r\n        </h1>\r\n        <Form\r\n        name=\"basic\"\r\n        initialValues={{\r\n            remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        span={12} offset={6}\r\n        >\r\n        <Form.Item\r\n            label=\"Pomodoro\"\r\n            name=\"pomodoro\"\r\n            rules={[\r\n            {\r\n                required: true,\r\n                message: 'Please input the Pomodoro time!',\r\n            },\r\n            ]}\r\n        >\r\n            \r\n            <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n            label=\"Short Break\"\r\n            name=\"short\"\r\n            rules={[\r\n            {\r\n                required: true,\r\n                message: 'Please input the Short Break time!',\r\n            },\r\n            ]}\r\n        >\r\n            <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n            label=\"Long Break\"\r\n            name=\"long\"\r\n            rules={[\r\n                {\r\n                    required: true,\r\n                    message: 'Please input the Long Break time!',\r\n                },\r\n            ]}\r\n        >\r\n            <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n            </Button>\r\n        </Form.Item>\r\n        </Form>\r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        beginningTime: state.beginningTime\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { changePomodoro, changeShortBreak, changeLongBreak })(Demo);","import React from 'react';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport history from '../history';\r\nimport Timer from './Timer';\r\nimport Nav from './Nav';\r\nimport Settings from './Settings';\r\nimport { Layout } from 'antd';\r\nimport '../Styles/App.css';\r\n\r\nconst { Content } = Layout;\r\n\r\nconst App = () => {\r\n    return(\r\n        <Layout>\r\n            <HashRouter history = {history}>\r\n                <Nav />\r\n                <Content id = \"content\">\r\n                    <Route path=\"/\" exact component={Timer} />\r\n                    <Route path=\"/settings\" exact component={Settings} />\r\n                </Content>\r\n            </HashRouter>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers'\r\nimport App from './Components/App'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n)\r\n\r\n\r\nReactDOM.render(\r\n    <Provider  store = {store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}